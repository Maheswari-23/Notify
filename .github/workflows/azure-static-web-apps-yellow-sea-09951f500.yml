name: Notify CI/CD with Security Scan

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  # ----------------------------
  # 1️⃣ CodeQL Security Analysis
  # ----------------------------
  codeql-analysis:
    name: Static Security Scan (CodeQL)
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [javascript]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # ----------------------------
  # 2️⃣ Deploy to Azure Static Web Apps
  # ----------------------------
  build_and_deploy_job:
    needs: codeql-analysis 
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Replace API keys in HTML
        run: |
          sed -i 's|__APP_INSIGHTS_CONNECTION_STRING__|${{ secrets.APP_INSIGHTS_CONNECTION_STRING }}|g' webapp.html
          sed -i 's|__SUBMIT_POST_URL__|${{ secrets.SUBMIT_POST_URL }}|g' webapp.html
          sed -i 's|__REWRITE_TEXT_URL__|${{ secrets.REWRITE_TEXT_URL }}|g' webapp.html
          sed -i 's|__GET_EVENTS_URL__|${{ secrets.GET_EVENTS_URL }}|g' webapp.html

      - name: Create basic package.json for Oryx detection
        run: |
          cat > package.json << EOF
          {
            "name": "static-web-app",
            "version": "1.0.0",
            "description": "Static HTML web application",
            "scripts": {
              "build": "echo 'No build step required for static site'"
            },
            "dependencies": {},
            "devDependencies": {}
          }
          EOF

      - name: Create SWA configuration
        run: |
          cat > staticwebapp.config.json << EOF
          {
            "navigationFallback": {
              "rewrite": "/index.html"
            },
            "mimeTypes": {
              ".json": "text/json"
            }
          }
          EOF

      - name: Build and Deploy to Azure
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/"
          api_location: "" # Leave empty if no API
          output_location: "" # Leave empty since we're deploying directly
          skip_app_build: true # Skip Oryx build for static HTML
          production_branch: "main"

      - name: Wait for deployment to complete
        run: sleep 30

# ----------------------------
# 3️⃣ OWASP ZAP DAST Security Scan
# ----------------------------
zap_scan:
  needs: build_and_deploy_job 
  name: OWASP ZAP Baseline Scan
  runs-on: ubuntu-latest
  if: success() # Only run if deployment succeeded

  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # This ensures the .zap directory is properly checked out
        fetch-depth: 0

    - name: Debug - List files to verify .zap directory exists
      run: |
        echo "Current directory structure:"
        ls -la
        echo "Checking for .zap directory:"
        ls -la .zap/ || echo ".zap directory not found"
        echo "Checking rules.tsv content:"
        cat .zap/rules.tsv || echo "rules.tsv not found"

    - name: Run ZAP Baseline Scan
      uses: zaproxy/action-baseline@v0.10.0
      with:
        target: "https://yellow-sea-09951f500.3.azurestaticapps.net"
        cmd_options: "-a -j"
        rules_file_name: ".zap/rules.tsv"
        fail_action: false
        allow_issue_writing: false

    - name: Upload ZAP Report
      uses: actions/upload-artifact@v4
      with:
        name: zap-security-report
        path: |
          zap_report.html
          report_html.html
          report_md.md
          report_json.json
        retention-days: 7

  # ----------------------------
  # 4️⃣ Close Pull Request Job
  # ----------------------------
  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job

    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: "close"

